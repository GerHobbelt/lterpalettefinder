% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palette_extractor.R
\name{palette_extractor}
\alias{palette_extractor}
\title{Extract Hexadecimal Codes from an Image}
\usage{
palette_extractor(image, progress_bar = TRUE)
}
\arguments{
\item{image}{Name of the .PNG file to extract colors from (only .PNGs are supported at this time)}

\item{progress_bar}{Logical (TRUE / FALSE) indicating whether printing a progress bar in the console as the function extracts colors is desired}
}
\value{
A dataframe of a single column ("hex_code") containing all hexadecimal codes remaining after extraction and removal of 'dark' and 'similar' colors.
}
\description{
Retrieves hexadecimal codes for the colors in an image file. Currently only .PNG files are supported. The function automatically removes dark colors (i.e., colors where the red, green, and blue channels are less than 7) and removes 'similar' colors to yield a set of a few dozen colors (varies between images) from which you can select the subset that works best for your visualization needs. Note that photos that are very dark may return few viable colors and photos that are a single color may not return as many hex codes as more diverse images.
}
\examples{
## This example is commented out because that's not a real file path or PNG file.
## This example will work if you change the first line to point to an existing .PNG

## Extract colors from a supplied image
# my_colors <- palette_extractor(image = file.path("Path", "to", "picture.png"),
#  progress_bar = TRUE)

## Create a plot to evaluate the HEX codes and facilitate selection of which you want
# ggplot(my_colors, aes(x = hex_code, y = 1, fill = hex_code)) +
# geom_bar(stat = 'identity') +
# scale_fill_manual(values = my_colors$hex_code) +
# theme(legend.position = 'none', axis.text.x = element_text(angle = 35, hjust = 1))
       

}
